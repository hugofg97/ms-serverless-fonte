service: microservice-streaming

frameworkVersion: "2"
useDotenv: true

provider:
  apiName: FonteReiki-${env:ENVIRONMENT}
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: "20201221"
  timeout: 30
  region: ${env:REGION}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
        - s3:*
      Resource: "*"
  stage: ${env:ENVIRONMENT}
  apiKeys:
    - ${env:X_API_KEY_NAME}
  usagePlan:
    quota:
      limit: 100000
      period: MONTH
    throttle:
      rateLimit: 20
      burstLimit: 30
tracing:
  apiGateway: true
  lambda: true

resources:
  Resources:
    GatewayResponseDefault4XX:
      Type: "AWS::ApiGateway::GatewayResponse"
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: "ApiGatewayRestApi"
    GatewayResponseDefault5XX:
      Type: "AWS::ApiGateway::GatewayResponse"
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_5XX
        RestApiId:
          Ref: "ApiGatewayRestApi"

plugins:
  - serverless-dotenv-plugin # Allow set global parameters in env.{enviroment}
  - serverless-offline

functions:
  - ${file(gatways/subscriber/routes.yml)}
  - ${file(gatways/videos/routes.yml)}
  - ${file(gatways/sessions/routes.yml)}
  - ${file(gatways/meeting/routes.yml)}
  - ${file(gatways/therapy/routes.yml)}
  - ${file(gatways/profile/routes.yml)}
